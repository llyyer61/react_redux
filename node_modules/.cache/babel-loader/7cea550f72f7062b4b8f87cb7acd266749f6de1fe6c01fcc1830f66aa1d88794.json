{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n//每个 slice 需要个 name\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    //state后面不用写action，因为这些就是被action被触发\n    increment(state) {\n      state.counter++;\n    },\n    increase(state) {\n      state.counter--;\n    },\n    decrement(state, action) {\n      state.counter = state.counter + action.payload; // payload 是内置设定的名称\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n//configureStore 需要传一个 object\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\n\n// 创建 redux 的 action\nexport const counterActions = counterSlice.actions;\n\n// 不使用 redux-toolkit 的原始 react-redux 写法 ---------------------------------\n\n// import { createStore } from \"redux\";\n// export const INCREMENT = \"increment\";\n// export const INCREASE = \"increase\";\n// export const DECREMENT = \"decrement\";\n// export const TOGGLE = \"toggle\";\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === INCREMENT) {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === INCREASE) {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === DECREMENT) {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === TOGGLE) {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n\n//   return state; //别漏了返回 state\n// };\n\n// const store = createStore(counterReducer);\n\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","increase","decrement","action","payload","toggle","store","reducer","counterActions","actions"],"sources":["/Volumes/Mono/IT/React_Learning_Demo/react_redux/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\n//每个 slice 需要个 name\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    //state后面不用写action，因为这些就是被action被触发\n    increment(state) {\n      state.counter++;\n    },\n    increase(state) {\n      state.counter--;\n    },\n    decrement(state, action) {\n      state.counter = state.counter + action.payload; // payload 是内置设定的名称\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n//configureStore 需要传一个 object\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer },\n});\n\n// 创建 redux 的 action\nexport const counterActions = counterSlice.actions;\n\n// 不使用 redux-toolkit 的原始 react-redux 写法 ---------------------------------\n\n// import { createStore } from \"redux\";\n// export const INCREMENT = \"increment\";\n// export const INCREASE = \"increase\";\n// export const DECREMENT = \"decrement\";\n// export const TOGGLE = \"toggle\";\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === INCREMENT) {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === INCREASE) {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === DECREMENT) {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n\n//   if (action.type === TOGGLE) {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter,\n//     };\n//   }\n\n//   return state; //别漏了返回 state\n// };\n\n// const store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;;AAEtD;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACR;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQA,CAACD,KAAK,EAAE;MACdA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,SAASA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACvBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO,CAAC,CAAC;IAClD,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAE;IAAEb,OAAO,EAAEE,YAAY,CAACW;EAAQ;AAC3C,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;;AAElD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}